name: bull-board-sentinel-example

networks:
  redis-network:
    driver: bridge

services:
  bullboard:
    container_name: bullboard
    image: venatum/bull-board:latest
    environment:
      BULL_VERSION: BULL
      SENTINEL_NAME: mymaster
      SENTINEL_HOSTS: "redis-sentinel1:26379;redis-sentinel2:26380;redis-sentinel3:26381"
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - redis-network
    depends_on:
      redis-sentinel1:
        condition: service_healthy
      redis-sentinel2:
        condition: service_healthy
      redis-sentinel3:
        condition: service_healthy

  ###############
  ##   Redis   ##
  ###############
  # https://hub.docker.com/r/bitnami/redis/
  redis-master:
    container_name: redis-master
    image: bitnami/redis:latest
    environment:
      ALLOW_EMPTY_PASSWORD: yes
      REDIS_REPLICATION_MODE: master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - redis-network

  redis-slave1:
    container_name: redis-slave1
    image: bitnami/redis:latest
    environment:
      ALLOW_EMPTY_PASSWORD: yes
      REDIS_REPLICATION_MODE: slave
      REDIS_MASTER_HOST: redis-master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - redis-network
    depends_on:
      redis-master:
        condition: service_healthy

  redis-slave2:
    container_name: redis-slave2
    image: bitnami/redis:latest
    environment:
      ALLOW_EMPTY_PASSWORD: yes
      REDIS_REPLICATION_MODE: slave
      REDIS_MASTER_HOST: redis-master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - redis-network
    depends_on:
      redis-master:
        condition: service_healthy

  ###############
  ## Sentinels ##
  ###############
  # https://hub.docker.com/r/bitnami/redis-sentinel/
  redis-sentinel1:
    container_name: redis-sentinel1
    image: bitnami/redis-sentinel:latest
    environment:
      REDIS_MASTER_HOST: redis-master
      REDIS_SENTINEL_PORT_NUMBER: 26379
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26379", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - '26379:26379'
    networks:
      - redis-network
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave1:
        condition: service_healthy
      redis-slave2:
        condition: service_healthy

  redis-sentinel2:
    container_name: redis-sentinel2
    image: bitnami/redis-sentinel:latest
    environment:
      REDIS_MASTER_HOST: redis-master
      REDIS_SENTINEL_PORT_NUMBER: 26380
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26380", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - '26380:26379'
    networks:
      - redis-network
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave1:
        condition: service_healthy
      redis-slave2:
        condition: service_healthy

  redis-sentinel3:
    container_name: redis-sentinel3
    image: bitnami/redis-sentinel:latest
    environment:
      REDIS_MASTER_HOST: redis-master
      REDIS_SENTINEL_PORT_NUMBER: 26381
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "26381", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - '26381:26379'
    networks:
      - redis-network
    depends_on:
      redis-master:
        condition: service_healthy
      redis-slave1:
        condition: service_healthy
      redis-slave2:
        condition: service_healthy
